apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" ( dict "root" . "service" .Values.logs ) }}
  labels: {{ include "common.labels" ( dict "root" . "service" .Values.logs ) | nindent 4 }}
spec:
  replicas: {{ .Values.config.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels: {{ include "common.selectorLabels" ( dict "root" . "service" .Values.logs ) | nindent 6 }}
  template:
    metadata:
      labels: {{ include "common.labels" ( dict "root" . "service" .Values.logs ) | nindent 8 }}
    spec:
      {{- include "common.podConfig" ( dict "root" . "service" .Values.logs ) | nindent 6 }}
      containers:
        - name: config
          {{- include "common.containerConfig" ( dict "root" . "container" .Values.config ) | nindent 10 }}
          args: ['shared-config-slave']
          readinessProbe: &configProbe
            exec:
              command:
                - scm-is-ready
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 5
          livenessProbe: *configProbe
        - name: logs
          {{- include "common.containerConfig" ( dict "root" . "container" .Values.logs ) | nindent 10 }}
          volumeMounts:
            - mountPath: /master_config
              name: master-config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /logs/c2c/health_check?max_level=0
              port: http
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /logs/c2c/health_check
              port: http
            initialDelaySeconds: 15
      volumes:
        - name: configs
          emptyDir: {}
