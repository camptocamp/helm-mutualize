---
# Source: mutualize/templates/tilecloudchain-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: test-mutualize-tcc
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mutualize
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: tcc
---
# Source: mutualize/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Generic
metadata:
  name: test-mutualize
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
data:
  is_rsa: dG8gYmUgZGVmaW5lZA==
---
# Source: mutualize/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-mutualize-env
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
  annotations:
    {}
data:
  REDIS_SENTINELS: "rfs-redis-redisfailover:26379"
  REDIS_DB: "0"
  REDIS_SERVICENAME: mymaster
  REDIS_TIMEOUT: "30"
  SCM_BROADCAST_PREFIX: broadcast_scm_0_
  LOGS_BROADCAST_PREFIX: broadcast_logs_0_
  SENTRY_URL: https://@o330647.ingest.sentry.io/42
  SQLALCHEMY_URL: "postgresql://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):5432/$(DB_DATABASE)"
  MUTUALIZED_PRINT_URL: mutualize.local
  SCM_URL: http://test-mutualize-config:8080/scm/
  SCM_URL_EXTERNAL: https://mutualize.local/scm
  CHART_NAME: mutualize
  RELEASE_NAME: test
  RELEASE_NAMESPACE: default
  ES_FILTERS: kubernetes.labels.release=test,kubernetes.labels.service=print
  CONFIG_IMAGE_TAG: "3.1"
  LOGS_IMAGE_TAG: "latest"
  STATSD_PREFIX: mutualize.test.%h
  CATALINA_OPTS: >-
    -Dmapfish.maxContentLength=6291456
    -DmaxNumberOfRunningPrintJobs=2
    -Dsentry.dsn=https://:@o330647.ingest.sentry.io/42
    -Dsentry.release=latest
    -Dsentry.environment=test
    -Dsentry.tags=service:print
    -Ddb.username=$(DB_USERNAME)
    -Ddb.password=$(DB_PASSWORD)
    -Ddb.host=$(DB_HOST)
    -Ddb.name=$(DB_DATABASE)
    -Ddb.schema=public
    -DcacheDuration=60
    -Dsun.net.inetaddr.ttl=30
    -Xmx3072M
    -Xms3072M
    -XX:GCTimeLimit=70
    -XX:GCHeapFreeLimit=10
    -XX:+ExitOnOutOfMemoryError
---
# Source: mutualize/templates/tilecloudchain-configmap-mainconfig.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-mutualize-tcc-main-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
data:
  config.yaml: |
    test: 111
    toto: 222
---
# Source: mutualize/templates/logs-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-mutualize-logs
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: logs
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: logs
---
# Source: mutualize/templates/shared-config-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-mutualize-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: config
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: config
---
# Source: mutualize/templates/tilecloudchain-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-mutualize-tcc
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
---
# Source: mutualize/templates/shared-config-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-mutualize-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: config
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mutualize
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: config
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mutualize
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: config
    spec:

      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 33
      affinity:
        {}
      containers:
        - name: shared-config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/shared_config_manager:3.1"
          imagePullPolicy: IfNotPresent
          env:
              - name: "API_BASE_URL"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "SCM_URL"
              - name: "C2C_BROADCAST_PREFIX"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "SCM_BROADCAST_PREFIX"
              - name: "C2C_REDIS_TIMEOUT"
                value: "30"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/1"
              - name: "C2C_SECRET"
                value: "secret"
              - name: "LOG_LEVEL"
                value: "DEBUG"
              - name: "LOG_TYPE"
                value: "console"
              - name: "MASTER_CONFIG"
                value: ""
              - name: "SCM_ENV_PREFIXES"
                value: "TEST_"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /scm/c2c/health_check
              port: http
            initialDelaySeconds: 10
          volumeMounts:
            - name: ssh-key
              readOnly: true
              mountPath: /var/www/.ssh2
            - name: masterconfig
              readOnly: true
              mountPath: /etc/shared_config_manager
      volumes:
        - name: ssh-key
          secret:
            secretName: test-mutualize
            defaultMode: 0440
        - name: masterconfig
          configMap:
            name: test-mutualize-config
---
# Source: mutualize/templates/tilecloudchain-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-mutualize-tcc
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mutualize
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: tcc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mutualize
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: tcc
    spec:

      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 33
      affinity:
        {}
      containers:
        - name: config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/shared_config_manager:3.1"
          imagePullPolicy: IfNotPresent
          env:
              - name: "API_BASE_URL"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "SCM_URL"
              - name: "C2C_BROADCAST_PREFIX"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "SCM_BROADCAST_PREFIX"
              - name: "C2C_REDIS_TIMEOUT"
                value: "30"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/1"
              - name: "C2C_SECRET"
                value: "secret"
              - name: "LOG_LEVEL"
                value: "DEBUG"
              - name: "LOG_TYPE"
                value: "console"
              - name: "MASTER_CONFIG"
                value: "type: git\nrepo: 'https://github.com/camptocamp/helm-mutualize.git'\nbranch: master\nkey: secret\nsub_dir: tests/shared-config\nsparse: false\n"
              - name: "TAG_FILTER"
                value: "tilecloudchain"
              - name: "TARGET"
                value: "/config"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args: ['shared-config-slave']
          readinessProbe: &configProbe
            exec:
              command:
                - scm-is-ready
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 5
          livenessProbe:
            <<: *configProbe
            periodSeconds: 120
          volumeMounts:
            - name: configs
              mountPath: /master_config
        - name: tilecloudchain
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/tilecloud-chain:latest"
          imagePullPolicy: IfNotPresent
          env:
              - name: "C2C_BROADCAST_PREFIX"
                value: "broadcast_scm_3_"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/2"
              - name: "C2C_SECRET"
                value: "secret"
              - name: "SHARED_CONFIG_MASTER"
                value: "/master_config/master/shared_config_manager.yaml"
              - name: "SOURCES_KEY"
                value: "secret"
              - name: "TILEGENERATION_HOSTSFILE"
                value: "/etc/tilecloudchain-hosts/hosts.yaml"
              - name: "TILEGENERATION_MAIN_CONFIGFILE"
                value: "/etc/tilecloudchain-main/config.yaml"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          volumeMounts:
            - name: configs
              mountPath: /etc/tilecloudchain-configs
            - name: hosts
              mountPath: /etc/tilecloudchain-hosts
            - name: mainconfig
              mountPath: /etc/tilecloudchain-main
            - mountPath: /tmp
              name: tmp-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe: &configProbe
            httpGet:
              path: /tiles/c2c/health_check
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 15
          livenessProbe:
            <<: *configProbe
            periodSeconds: 60
      volumes:
        - name: configs
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
        - name: hosts
          configMap:
            name: test-mutualize-tcc-hosts
        - name: mainconfig
          configMap:
            name: test-mutualize-tcc-main-config
---
# Source: mutualize/templates/tilecloudchain-slave-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-mutualize-tcc-slave
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc-slave
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mutualize
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: tcc-slave
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mutualize
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: tcc-slave
    spec:

      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 33
      affinity:
        {}
      containers:
        - name: config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/shared_config_manager:3.1"
          imagePullPolicy: IfNotPresent
          env:
              - name: "API_BASE_URL"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "SCM_URL"
              - name: "C2C_BROADCAST_PREFIX"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "SCM_BROADCAST_PREFIX"
              - name: "C2C_REDIS_TIMEOUT"
                value: "30"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/1"
              - name: "C2C_SECRET"
                value: "secret"
              - name: "LOG_LEVEL"
                value: "DEBUG"
              - name: "LOG_TYPE"
                value: "console"
              - name: "MASTER_CONFIG"
                value: "type: git\nrepo: 'https://github.com/camptocamp/helm-mutualize.git'\nbranch: master\nkey: secret\nsub_dir: tests/shared-config\nsparse: false\n"
              - name: "TAG_FILTER"
                value: "tilecloudchain"
              - name: "TARGET"
                value: "/config"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args: ['shared-config-slave']
          readinessProbe: &configProbe
            exec:
              command:
                - scm-is-ready
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 5
          livenessProbe:
            <<: *configProbe
            periodSeconds: 120
          volumeMounts:
            - name: configs
              mountPath: /master_config
        - name: tilecloudchain
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/tilecloud-chain:latest"
          imagePullPolicy: IfNotPresent
          env:
              - name: "C2C_BROADCAST_PREFIX"
                value: "broadcast_scm_3_"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/2"
              - name: "C2C_SECRET"
                value: "secret"
              - name: "SHARED_CONFIG_MASTER"
                value: "/master_config/master/shared_config_manager.yaml"
              - name: "SOURCES_KEY"
                value: "secret"
              - name: "TILEGENERATION_HOSTSFILE"
                value: "/etc/tilecloudchain-hosts/hosts.yaml"
              - name: "TILEGENERATION_MAIN_CONFIGFILE"
                value: "/etc/tilecloudchain-main/config.yaml"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args: ["generate_tiles", "--role=slave", "--daemon"]
          volumeMounts:
            - name: configs
              mountPath: /etc/tilecloudchain-configs
            - name: hosts
              mountPath: /etc/tilecloudchain-hosts
            - name: mainconfig
              mountPath: /etc/tilecloudchain-main
            - mountPath: /tmp
              name: tmp-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
      volumes:
        - name: configs
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
        - name: hosts
          configMap:
            name: test-mutualize-tcc-hosts
        - name: mainconfig
          configMap:
            name: test-mutualize-tcc-main-config
---
# Source: mutualize/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-mutualize-main-print
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
    prefix: print
spec:
  tls:
    - hosts:
        - print.mutualize.local
      secretName: test-tls-print
  rules:
    - host: mutualize.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-mutualize
                port:
                  number: 8080
          - path: /logs
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-logs
                port:
                  number: 8080
          - path: /test/
            pathType: Prefix
            backend:
              service:
                name: test-mutualize
                port:
                  number: 8080
          - path: /test/logs
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-logs
                port:
                  number: 8080
---
# Source: mutualize/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-mutualize-main-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
    prefix: config
spec:
  tls:
    - hosts:
        - config.mutualize.local
      secretName: test-tls-config
  rules:
    - host: mutualize.local
      http:
        paths:
          - path: /config
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-config
                port:
                  number: 8080
          - path: /test/config
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-config
                port:
                  number: 8080
---
# Source: mutualize/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-mutualize-prod-print
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
    prefix: print
spec:
  tls:
    - hosts:
        - print.mutualize.prod.local
      secretName: test-prod-tls-print
  rules:
    - host: mutualize.prod.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-mutualize
                port:
                  number: 8080
          - path: /logs
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-logs
                port:
                  number: 8080
          - path: /test/
            pathType: Prefix
            backend:
              service:
                name: test-mutualize
                port:
                  number: 8080
          - path: /test/logs
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-logs
                port:
                  number: 8080
---
# Source: mutualize/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-mutualize-prod-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
    prefix: config
spec:
  tls:
    - hosts:
        - config.mutualize.prod.local
      secretName: test-prod-tls-config
  rules:
    - host: mutualize.prod.local
      http:
        paths:
          - path: /config
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-config
                port:
                  number: 8080
          - path: /test/config
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-config
                port:
                  number: 8080
---
# Source: mutualize/templates/tilecloudchain-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-mutualize-tcc-main
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  tls:
    - hosts:
        - mutualize-tiles.local
      secretName: test-tiles-tls
  rules:
    - host: mutualize-tiles.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-tcc
                port:
                  number: 8080
          - path: /test-tiles/
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-tcc
                port:
                  number: 8080
---
# Source: mutualize/templates/tilecloudchain-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-mutualize-tcc-prod
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  tls:
    - hosts:
        - mutualize-tiles.prod.local
      secretName: test-tiles-prod-tls
  rules:
    - host: mutualize-tiles.prod.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-tcc
                port:
                  number: 8080
          - path: /test-tiles/
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-tcc
                port:
                  number: 8080
---
# Source: mutualize/templates/shared-config-config.yaml
apiVersion: camptocamp.com/v1
kind: SharedConfigConfig
metadata:
  name: test-mutualize-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: config
spec:
  matchLabels:
    mutualize-sharedconfig: 'true'
  property: sources
  configmapName: config.yaml
---
# Source: mutualize/templates/tilecloudchain-config-hosts.yaml
apiVersion: camptocamp.com/v1
kind: SharedConfigConfig
metadata:
  name: test-mutualize-tcc-hosts
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  matchLabels:
    mutualize-tilecloudchain-hosts: 'true'
  configmapName: hosts.yaml
