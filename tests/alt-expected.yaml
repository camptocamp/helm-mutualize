---
# Source: mutualize/templates/tilecloudchain-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: test-mutualize-tcc
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mutualize
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: tcc
---
# Source: mutualize/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Generic
metadata:
  name: test-mutualize
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
data:
  id_rsa: dG8gYmUgZGVmaW5lZA==
---
# Source: mutualize/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-mutualize-env
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
  annotations:
    {}
data:
  CHART_NAME: mutualize
  RELEASE_NAME: test
  RELEASE_NAMESPACE: default
  INGRESS_HOST: mutualize.local
  CONFIG_PATH: "/"
  CONFIG_IMAGE_TAG: "3.1"
  PRINT_IMAGE_TAG: "latest"
  PRINT_LOGS_IMAGE_TAG: "latest"
  TILECLOUDCHAIN_IMAGE_TAG: "latest"
  CONFIG_SERVICE_NAME: test-mutualize-config
  PRINT_SERVICE_NAME: test-mutualize-print
  PRINT_LOGS_SERVICE_NAME: test-mutualize-logs
  TILECLOUDCHAIN_SERVICE_NAME: test-mutualize-tcc
---
# Source: mutualize/templates/tilecloudchain-configmap-mainconfig.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-mutualize-tcc-main-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
data:
  config.yaml: |
    test: 111
    toto: 222
---
# Source: mutualize/templates/logs-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-mutualize-logs
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: logs
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: logs
---
# Source: mutualize/templates/shared-config-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-mutualize-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: config
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: config
---
# Source: mutualize/templates/tilecloudchain-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-mutualize-tcc
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
---
# Source: mutualize/templates/shared-config-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-mutualize-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: config
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mutualize
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: config
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mutualize
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: config
    spec:

      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 33
      affinity:
        {}
      containers:
        - name: shared-config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/shared_config_manager:3.1"
          imagePullPolicy: IfNotPresent
          env:
              - name: "C2C_REDIS_TIMEOUT"
                value: "30"
              - name: "C2C_SECRET"
                value: "secret"
              - name: "CONFIG_SERVICE_NAME"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "CONFIG_SERVICE_NAME"
              - name: "LOG_LEVEL"
                value: "DEBUG"
              - name: "LOG_TYPE"
                value: "console"
              - name: "MASTER_CONFIG"
                value: ""
              - name: "REDIS_DB"
                value: "1"
              - name: "SCM_ENV_PREFIXES"
                value: "TEST_"
              - name: "API_BASE_URL"
                value: "http://$(CONFIG_SERVICE_NAME):8080/"
              - name: "C2C_BROADCAST_PREFIX"
                value: "broadcast_config_$(REDIS_DB)_"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/$(REDIS_DB)"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /c2c/health_check
              port: http
            initialDelaySeconds: 10
          volumeMounts:
            - name: ssh-key
              readOnly: true
              mountPath: /var/www/.ssh2
            - name: masterconfig
              readOnly: true
              mountPath: /etc/shared_config_manager
      volumes:
        - name: ssh-key
          secret:
            secretName: test-mutualize
            defaultMode: 0440
        - name: masterconfig
          configMap:
            name: test-mutualize-config
---
# Source: mutualize/templates/tilecloudchain-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-mutualize-tcc
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mutualize
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: tcc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mutualize
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: tcc
    spec:

      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 33
      affinity:
        {}
      containers:
        - name: config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/shared_config_manager:3.1"
          imagePullPolicy: IfNotPresent
          env:
              - name: "C2C_REDIS_TIMEOUT"
                value: "30"
              - name: "C2C_SECRET"
                value: "secret"
              - name: "CONFIG_SERVICE_NAME"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "CONFIG_SERVICE_NAME"
              - name: "LOG_LEVEL"
                value: "DEBUG"
              - name: "LOG_TYPE"
                value: "console"
              - name: "MASTER_CONFIG"
                value: "type: git\nrepo: 'https://github.com/camptocamp/helm-mutualize.git'\nbranch: master\nkey: secret\nsub_dir: tests/shared-config\nsparse: false\n"
              - name: "REDIS_DB"
                value: "1"
              - name: "TAG_FILTER"
                value: "tilecloudchain"
              - name: "TARGET"
                value: "/config"
              - name: "API_BASE_URL"
                value: "http://$(CONFIG_SERVICE_NAME):8080/"
              - name: "C2C_BROADCAST_PREFIX"
                value: "broadcast_config_$(REDIS_DB)_"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/$(REDIS_DB)"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args: ['shared-config-slave']
          readinessProbe: &configProbe
            exec:
              command:
                - scm-is-ready
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 5
          livenessProbe:
            <<: *configProbe
            periodSeconds: 120
          volumeMounts:
            - name: configs
              mountPath: /config
            - name: masterconfig
              readOnly: true
              mountPath: /etc/shared_config_manager
        - name: tilecloudchain
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/tilecloud-chain:latest"
          imagePullPolicy: IfNotPresent
          env:
              - name: "C2C_SECRET"
                value: "secret"
              - name: "REDIS_DB"
                value: "3"
              - name: "TILEGENERATION_HOSTSFILE"
                value: "/etc/tilecloudchain-hosts/hosts.yaml"
              - name: "TILEGENERATION_MAIN_CONFIGFILE"
                value: "/etc/tilecloudchain-main/config.yaml"
              - name: "C2C_BROADCAST_PREFIX"
                value: "broadcast_scm_$(REDIS_DB)_"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/$(REDIS_DB)"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          volumeMounts:
            - name: configs
              mountPath: /etc/tilecloudchain-configs
            - name: hosts
              mountPath: /etc/tilecloudchain-hosts
            - name: mainconfig
              mountPath: /etc/tilecloudchain-main
            - mountPath: /tmp
              name: tmp-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe: &configProbe
            httpGet:
              path: /tiles/c2c/health_check
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 15
          livenessProbe:
            <<: *configProbe
            periodSeconds: 60
      volumes:
        - name: configs
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
        - name: hosts
          configMap:
            name: test-mutualize-tcc-hosts
        - name: mainconfig
          configMap:
            name: test-mutualize-tcc-main-config
        - name: masterconfig
          configMap:
            name: test-mutualize-config
---
# Source: mutualize/templates/tilecloudchain-slave-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-mutualize-tcc-slave
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc-slave
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mutualize
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: tcc-slave
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mutualize
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: tcc-slave
    spec:

      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 33
      affinity:
        {}
      containers:
        - name: config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/shared_config_manager:3.1"
          imagePullPolicy: IfNotPresent
          env:
              - name: "C2C_REDIS_TIMEOUT"
                value: "30"
              - name: "C2C_SECRET"
                value: "secret"
              - name: "CONFIG_SERVICE_NAME"
                valueFrom:
                  configMapKeyRef:
                    name: "test-mutualize-env"
                    key: "CONFIG_SERVICE_NAME"
              - name: "LOG_LEVEL"
                value: "DEBUG"
              - name: "LOG_TYPE"
                value: "console"
              - name: "MASTER_CONFIG"
                value: "type: git\nrepo: 'https://github.com/camptocamp/helm-mutualize.git'\nbranch: master\nkey: secret\nsub_dir: tests/shared-config\nsparse: false\n"
              - name: "REDIS_DB"
                value: "1"
              - name: "TAG_FILTER"
                value: "tilecloudchain"
              - name: "TARGET"
                value: "/config"
              - name: "API_BASE_URL"
                value: "http://$(CONFIG_SERVICE_NAME):8080/"
              - name: "C2C_BROADCAST_PREFIX"
                value: "broadcast_config_$(REDIS_DB)_"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/$(REDIS_DB)"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args: ['shared-config-slave']
          readinessProbe: &configProbe
            exec:
              command:
                - scm-is-ready
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 5
          livenessProbe:
            <<: *configProbe
            periodSeconds: 120
          volumeMounts:
            - name: configs
              mountPath: /config
            - name: masterconfig
              readOnly: true
              mountPath: /etc/shared_config_manager
        - name: tilecloudchain
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/tilecloud-chain:latest"
          imagePullPolicy: IfNotPresent
          env:
              - name: "C2C_SECRET"
                value: "secret"
              - name: "REDIS_DB"
                value: "3"
              - name: "TILEGENERATION_HOSTSFILE"
                value: "/etc/tilecloudchain-hosts/hosts.yaml"
              - name: "TILEGENERATION_MAIN_CONFIGFILE"
                value: "/etc/tilecloudchain-main/config.yaml"
              - name: "C2C_BROADCAST_PREFIX"
                value: "broadcast_scm_$(REDIS_DB)_"
              - name: "C2C_REDIS_URL"
                value: "redis://test-redis-master/$(REDIS_DB)"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args: ["generate_tiles", "--role=slave", "--daemon"]
          volumeMounts:
            - name: configs
              mountPath: /etc/tilecloudchain-configs
            - name: hosts
              mountPath: /etc/tilecloudchain-hosts
            - name: mainconfig
              mountPath: /etc/tilecloudchain-main
            - mountPath: /tmp
              name: tmp-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
      volumes:
        - name: configs
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
        - name: hosts
          configMap:
            name: test-mutualize-tcc-hosts
        - name: mainconfig
          configMap:
            name: test-mutualize-tcc-main-config
        - name: masterconfig
          configMap:
            name: test-mutualize-config
---
# Source: mutualize/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-mutualize-main
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
spec:
  tls:
    - hosts:
        - mutualize.local
      secretName: test-tls
  rules:
    - host: mutualize.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-mutualize
                port:
                  number: 8080
          - path: /print/logs
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-logs
                port:
                  number: 8080
          - path: /config
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-config
                port:
                  number: 8080
          - path: /test/
            pathType: Prefix
            backend:
              service:
                name: test-mutualize
                port:
                  number: 8080
          - path: /test/print/logs
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-logs
                port:
                  number: 8080
          - path: /test/config
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-config
                port:
                  number: 8080
---
# Source: mutualize/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-mutualize-prod
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
spec:
  tls:
    - hosts:
        - mutualize.prod.local
      secretName: test-prod-tls
  rules:
    - host: mutualize.prod.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-mutualize
                port:
                  number: 8080
          - path: /print/logs
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-logs
                port:
                  number: 8080
          - path: /config
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-config
                port:
                  number: 8080
          - path: /test/
            pathType: Prefix
            backend:
              service:
                name: test-mutualize
                port:
                  number: 8080
          - path: /test/print/logs
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-logs
                port:
                  number: 8080
          - path: /test/config
            pathType: Prefix
            backend:
              service:
                name: test-mutualize-config
                port:
                  number: 8080
---
# Source: mutualize/templates/shared-config-config.yaml
apiVersion: camptocamp.com/v1
kind: SharedConfigConfig
metadata:
  name: test-mutualize-config
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: config
spec:
  matchLabels:
    mutualize-sharedconfig: 'true'
  property: sources
  configmapName: config.yaml
---
# Source: mutualize/templates/tilecloudchain-config-hosts.yaml
apiVersion: camptocamp.com/v1
kind: SharedConfigConfig
metadata:
  name: test-mutualize-tcc-hosts
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tcc
spec:
  matchLabels:
    mutualize-tilecloudchain-hosts: 'true'
  configmapName: hosts.yaml
---
# Source: mutualize/templates/sharedconfig.yaml
apiVersion: camptocamp.com/v1
kind: SharedConfigSource
metadata:
  name: test-mutualize-examples
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
spec:
  name: examples
  content:
      type: git
      repo: git@github.com:mapfish/mapfish-print.git
      key: super-secret
      template_engines:
        - type: shell
          environment_variables: true
---
# Source: mutualize/templates/sharedconfig.yaml
apiVersion: camptocamp.com/v1
kind: SharedConfigSource
metadata:
  name: test-mutualize-examples2
  labels:
    helm.sh/chart: mutualize-0.1.1
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mutualize
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: main
    mutualize-sharedconfig: "true"
spec:
  name: examples2
  content:
      type: git
      repo: git@github.com:mapfish/mapfish-print.git
      branch: master
      key: super-secret
      sub_dir: examples/src/test/resources/examples
      tags:
        - print
      template_engines:
        - type: shell
          environment_variables: true
          data:
            - name: "TOTO"
              value: "toto"
