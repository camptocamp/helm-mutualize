# Default values for mapserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ''
fullnameOverride: ''

imagePullSecrets: []

image:
  pullPolicy: IfNotPresent

sshKey: to be defined

envConfigMap:
  annotations: {}

config:
  serviceName: config
  replicaCount: 1
  image: &config-image
    repository: camptocamp/shared_config_manager
    tag: latest
    sha:
  env: {}
  annotations: {}
  resources: {}
  service:
    type: ClusterIP
    port: 8080

print:
  enabled: true
  serviceName: print
  replicaCount: 1
  terminationGracePeriodSeconds: 120
  image:
    repository: camptocamp/mapfish_print
    tag: latest
    hash:
  env: {}
  annotations: {}
  maxContentLength: '6291456'
  maxNumberOfRunningPrintJobs: 2
  cacheDurationSeconds: 60
  dbSchema: public
  catalinaOpts: ''
  maxMemory: 3072
  resources: {}
  service:
    type: ClusterIP
    port: 8080
  config:
    image: *config-image
    env:
      MASTER_CONFIG:
        value: '{"sources": {}}'
      TAG_FILTER:
        value: print
      TARGET:
        value: /config
    resources: {}

logs:
  enabled: true
  serviceName: logs
  replicaCount: 1
  image:
    repository: camptocamp/mapfish-print-logs
    tag: latest
    sha:
  env: {}
  annotations: {}
  resources: {}
  service:
    type: ClusterIP
    port: 8080

tilecloudchain: &tilecloudchain
  enabled: false
  serviceName: tcc
  replicaCount: 1
  image:
    repository: camptocamp/tilecloud-chain
    tag: latest
    sha:
  env:
    TILEGENERATION_MAIN_CONFIGFILE:
      value: /etc/tilecloudchain-main/config.yaml
    TILEGENERATION_HOSTSFILE:
      value: /etc/tilecloudchain-hosts/hosts.yaml
  mainConfig: ''
  annotations: {}
  resources: {}
  service:
    type: ClusterIP
    port: 8080
  config:
    image: *config-image
    env:
      MASTER_CONFIG:
        value: '{"sources": {}}'
      TAG_FILTER:
        value: tilecloudchain
      TARGET:
        value: /config
    resources: {}
  ingress:
    enabled: false
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts: []
    #  - name: main
    #    host: chart-example.local
    #    paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

tilecloudchainSlave:
  <<: *tilecloudchain
  serviceName: tcc-slave

dbstats:
  enabled: true
  serviceName: dbstats
  image:
    repository: camptocamp/c2cwsgiutils
    tag: latest
    sha:
  env: {}
  annotations: {}
  resources: {}
  prometheus: http://prometheus-pushgateway.gs-metrics.svc:9091/

elasticsearch:
  auth:
    user: ''
    password: ''

statsd:
  enabled: true
  url: monitoring-statsd:9125

redis:
  host: rfs-redis-redisfailover
  port: 26379
  db: 0
  servicename: mymaster
  timeout: 30

sentry:
  enabled: true
  hostname: o330647.ingest.sentry.io
  key: ''
  secret: ''
  project: 42

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: default

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # runAsNonRoot: true
  # runAsUser: 33 # www-data
  # capabilities:
  #   drop:
  #   - ALL

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #  - name: main
  #    host: chart-example.local
  #    paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
