# Default values for mapserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ''
fullnameOverride: ''

imagePullSecrets: []

image:
  pullPolicy: IfNotPresent

print:
  replicaCount: 1
  terminationGracePeriodSeconds: 120
  image:
    repository: camptocamp/mapfish_print
    tag: latest
    hash:
  env:
    LOG_LEVEL: INFO
    PRINT_YAML_MAX_ALIASES: 200
    DOLLAR: $
    DISABLE_MUTUALIZED_PRINT: ''
    DISABLE_LOCAL_PRINT: '#'
  # Inject env from configmap
  # <env>:
  #   name: <configMap name>
  #   postfix: <configMap name> # after fullname-, exclusive with name
  #   key: <configMap key>
  configMapEnv: {}
  secretEnv: {}
  maxContentLength: '6291456'
  maxNumberOfRunningPrintJobs: 2
  cacheDurationSeconds: 60
  dbSchema: public
  # resources are automatically computed for this service (in function of maxMemory)
  catalinaOpts: ''
  # nodeSelector: {}
  # tolerations: []
  # affinity: {}
  maxMemory: 3072
  resources: {}

config:
  replicaCount: 1
  image:
    repository: camptocamp/shared_config_manager
    tag: latest
    sha:
  env:
    SCM_ENV_PREFIXES: MUTUALIZED_:DOLLAR:DISABLE_
    DOLLAR: $
    DISABLE_MUTUALIZED_PRINT: ''
    DISABLE_LOCAL_PRINT: '#'
    LOG_LEVEL: INFO
  # Inject env from configmap
  # <env>:
  #   name: <configMap name>
  #   postfix: <configMap name> # after fullname-, exclusive with name
  #   key: <configMap key>
  configMapEnv: {}
  secretEnv: {}
  resources: {}
  slave:
    env:
      LOG_LEVEL: INFO
      TAG_FILTER: master
      C2C_SECRET: secret
      C2C_REQUESTS_DEFAULT_TIMEOUT: '30'
      SENTRY_TAG_SERVICE: config-slave
      LOG_TYPE: json
    # Inject env from configmap
    # <env>:
    #   name: <configMap name>
    #   postfix: <configMap name> # after fullname-, exclusive with name
    #   key: <configMap key>
    configMapEnv:
      MASTER_CONFIG:
        postfix: scm-master-config
        key: data
      API_BASE_URL:
        postfix: env
        key: API_BASE_URL
      C2C_REDIS_SENTINELS:
        postfix: env
        key: REDIS_SENTINELS
      C2C_REDIS_DB:
        postfix: env
        key: REDIS_DB
      C2C_REDIS_SERVICENAME:
        postfix: env
        key: REDIS_SERVICENAME
      C2C_REDIS_TIMEOUT:
        postfix: env
        key: REDIS_TIMEOUT
      C2C_BROADCAST_PREFIX:
        postfix: env
        key: C2C_BROADCAST_PREFIX
      SENTRY_URL:
        postfix: env
        key: SENTRY_URL
      SENTRY_CLIENT_ENVIRONMENT:
        postfix: env
        key: RELEASE_NAME
      MUTUALIZED_PRINT_URL:
        postfix: env
        key: MUTUALIZED_PRINT_URL

    secretEnv: {}
    resources: {}
  # nodeSelector: {}
  # tolerations: []
  # affinity: {}

logs:
  replicaCount: 1
  image:
    repository: camptocamp/mapfish-print-logs
    tag: latest
    sha:
  env:
    DB_SCHEMA: print
    C2C_SECRET: secret
    SOURCES_KEY: lll
    SENTRY_TAG_SERVICE: logs
    LOG_TYPE: json
    SHARED_CONFIG_MASTER: /master_config/master/shared_config_manager.yaml
    ES_URL: https://elasticsearch.logs.camptocamp.com/
    ES_INDEXES: openshift-ch-1-gs-mutualized-print-*

  # Inject env from configmap
  # <env>:
  #   name: <configMap name>
  #   postfix: <configMap name> # after fullname-, exclusive with name
  #   key: <configMap key>
  configMapEnv:
    SQLALCHEMY_URL:
      postfix: env
      kex: SQLALCHEMY_URL
    C2C_REDIS_SENTINELS:
      postfix: env
      key: REDIS_SENTINELS
    C2C_REDIS_DB:
      postfix: env
      key: REDIS_DB
    C2C_REDIS_SERVICENAME:
      postfix: env
      key: REDIS_SERVICENAME
    C2C_REDIS_TIMEOUT:
      postfix: env
      key: REDIS_TIMEOUT
    C2C_BROADCAST_PREFIX:
      postfix: env
      key: LOGS_BROADCAST_PREFIX
    SENTRY_URL:
      postfix: env
      key: SENTRY_URL
    SENTRY_CLIENT_ENVIRONMENT:
      postfix: env
      key: RELEASE_NAME
    SCM_URL:
      postfix: env
      key: SCM_URL
    SCM_URL_EXTERNAL:
      postfix: env
      key: SCM_URL_EXTERNAL
    ES_FILTERS:
      postfix: env
      key: ES_FILTERS
    ES_AUTH:
      postfix: env
      key: ES_AUTH
  secretEnv:
    PGPORT:
      name: postgresql-secret
      key: port
    PGHOST:
      name: postgresql-secret
      key: hostnameSlave
    PGHOST_MASTER:
      name: postgresql-secret
      key: hostname
    PGDATABASE:
      name: postgresql-secret
      key: database
    PGUSER:
      name: postgresql-secret
      key: username
    PGPASSWORD:
      name: postgresql-secret
      key: password
    DB_HOST:
      name: postgresql-secret
      key: hostnameSlave
    DB_DATABASE:
      name: postgresql-secret
      key: database
    DB_USERNAME:
      name: postgresql-secret
      key: username
    DB_PASSWORD:
      name: postgresql-secret
      key: password
  resources: {}
  service:
    type: ClusterIP
    port: 8080
  elasticsearch:
    auth:
      user: ''
      password: ''
  # nodeSelector: {}
  # tolerations: []
  # affinity: {}

dbstats:
  image:
    repository: camptocamp/c2cwsgiutils
    tag: latest
    sha:
  env:
    LOG_LEVEL: WARNING
    LOG_TYPE: json
    C2C_REQUESTS_DEFAULT_TIMEOUT: '30'
    C2CWSGIUTILS_STATS_DB_TRYNUMBER: '10'
    C2CWSGIUTILS_STATS_DB_SLEEP: '30'
    SENTRY_TAG_SERVICE: dbstats
    STATSD_USE_TAGS: '1'
  # Inject env from configmap
  # <env>:
  #   name: <configMap name>
  #   postfix: <configMap name> # after fullname-, exclusive with name
  #   key: <configMap key>
  configMapEnv:
    SENTRY_URL:
      postfix: env
      key: SENTRY_URL
    SENTRY_CLIENT_ENVIRONMENT:
      postfix: env
      key: RELEASE_NAME
    STATSD_TAG_CHART:
      postfix: env
      key: CHART_NAME
    STATSD_TAG_RELEASE:
      postfix: env
      key: RELEASE_NAME
    STATSD_TAG_NAMESPACE:
      postfix: env
      key: RELEASE_NAMESPACE
  secretEnv:
    PGHOST:
      name: postgresql-secret
      key: hostnameSlave
    PGDATABASE:
      name: postgresql-secret
      key: database
    PGUSER:
      name: postgresql-secret
      key: username
    PGPASSWORD:
      name: postgresql-secret
      key: password
  resources: {}
  prometheus: http://prometheus-pushgateway.gs-metrics.svc:9091/

statsd:
  enabled: true
  url: monitoring-statsd:9125

postgresql:
  statementTimeout: 30000

redis:
  host: rfs-redis-redisfailover
  port: 26379
  db: 0
  servicename: mymaster
  timeout: 30

sentry:
  hostname: o330647.ingest.sentry.io
  key: ''
  secret: ''
  project: 42

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: default

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 33 # www-data
  readOnlyRootFilesystem: true
  # capabilities:
  #   drop:
  #   - ALL

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
