name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    runs-on: ubuntu-20.04
    name: Continuous integration
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - run: docker system prune --all --force
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files
        env:
          SKIP: helm-lock
      - run: git diff
        if: failure()
      - name: Checks
        run: c2cciutils-checks

      - name: Install helm
        uses: azure/setup-helm@v3
      - run: helm dependency update .
      - run: helm lint .
      - run: helm template test .

      - run: helm template --namespace=default --values=tests/values.yaml test . > tests/actual.yaml
      - run: diff --ignore-trailing-space tests/actual.yaml tests/expected.yaml
      - run: helm template --namespace=default --values=tests/alt-values.yaml test . > tests/alt-actual.yaml
      - run: diff --ignore-trailing-space tests/alt-actual.yaml tests/alt-expected.yaml

      - name: Setup k3s/k3d
        run: c2cciutils-k8s-install

      - name: Create the database
        run:
          c2cciutils-k8s-db

          # Install operator
      - id: scm-operator
        run: ci/get-version camptocamp/operator-shared-config-manager
      - run: helm repo add operator-shared-config-manager https://camptocamp.github.io/operator-shared-config-manager
      - run:
          helm install operator-shared-config-manager --set=image.tag=${VERSION} --set=crd.suffix=int --set=crd.shortSuffix=i
          --set=env.ENVIRONMENT=int --version=${VERSION} operator-shared-config-manager/operator-shared-config-manager
        env:
          VERSION: ${{steps.scm-operator.outputs.version}}

          # Install Redis
      - run: helm repo add bitnami https://charts.bitnami.com/bitnami
      - run:
          helm install test-redis --set=auth.enabled=false --set=replica.replicaCount=0 --set=master.persistence.enabled=false
          bitnami/redis

      - run: kubectl apply -f tests/expected.yaml
      - run: kubectl wait --for=condition=Available=True --timeout=1m deployment operator-shared-config-manager
      - run: kubectl wait --for=condition=Available=True --timeout=2m deployment test-mutualize-config
      - run: kubectl wait --for=condition=Available=True --timeout=1m deployment test-mutualize-home
      - run: kubectl wait --for=condition=Available=True --timeout=1m deployment test-mutualize-logs
      - run: c2cciutils-k8s-logs
        if: always()
      - run:
          kubectl delete -f tests/expected.yaml || true

          # Just test that we can apply it
      - run: kubectl apply -f tests/alt-expected.yaml

      - run: helm uninstall test-redis

      - name: Publish
        run: c2cciutils-publish
